<!DOCTYPE html>
<html>
    <title> GCT - Play </title>
    <body>
        <%- include("partials/navbar.ejs", { activeNav: "Play" } ) %>
        <% 
            name = typeof name == "string" ? name : "Some Name";
            host = typeof host == "string" ? host : "Some Host";
        %>
        <div class="card" style="width: 50%;">
            <div class="card-body">
                <h5 class="card-title" style="color: yellow">Host: <%= host %></h5>
                <h6 id="countDown" class="card-subtitle mb-2 text-success"></h6>
              
                <table id="comTable" class="table">
                    <tr> <td style="color: orange;">System: Welcome <%= name %>! </td> </tr>
                </table>
                
                <div id="choose-row"  class="row" hidden> 
                    <div class="col"> Choose: </div>
                    <div class="col">
                        <input class="form-check-input" type="radio" name="choice" id="headRadio" checked>
                        <label class="form-check-label" for="headRadio"> Head </label>
                      </div>
                      <div class="col">
                        <input class="form-check-input" type="radio" name="choice" id="tailRadio">
                        <label class="form-check-label" for="tailRadio"> Tail </label>
                      </div>
                </div>

                <div class="row">

                    <div class="col-md-9">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1"><%= name %>: </span>
                            </div>
                            <input id="textBox" type="text" class="form-control" placeholder="Type Here" aria-label="Message" aria-describedby="basic-addon1">
                        </div>
                    </div>

                    <div class="col-md-3" >
                        <button type="button" class="btn btn-success" onclick="sendText();">Send</button>
                    </div>

                </div>

                <div class="row">
                    <div class="col"> <button id="startGameBtn" onclick="startGame();" type="button" class="btn btn-primary">Start Game</button> </div>
                    <div class="col"> <button id="surrenderBtn" onclick="surrender();" type="button" class="btn btn-warning" hidden >Surrender</button> </div>
                    <div class="col"> <button id="leaveGameBtn" onclick="leaveGame();" type="button" class="btn btn-danger" hidden >Leave Game</button> </div>
                </div>
            </div>

        </div>
    </body>

    <script>

        const textBox = document.getElementById( "textBox" );
        const comTable = document.getElementById( "comTable" );
        
        textBox.addEventListener( "keyup", ({key}) => { if ( key === "Enter" ) sendText(); })
        
        function sendText() {
            const text = textBox.value.trim();
            
            textBox.value = "";
            textBox.focus();
            textBox.scrollIntoView();
            
            if ( text.length === 0 ) return;

            const newRow = comTable.insertRow( comTable.rows.length );
            newRow.insertCell( 0 ).innerHTML = `<div style="color: blue;float:right;width:100%%;">You: ${ text }</div>`;
        }
        function startGame() {
            document.getElementById("startGameBtn").style.visibility = "hidden";
            document.getElementById("surrenderBtn").removeAttribute("hidden");
            document.getElementById("choose-row").removeAttribute("hidden");
        }
    </script>

</html>

<script>
    socket.emit( "/game/play" );

    socket.on( "/game/data", gameData => {
        console.log( gameData );
        const countDownHandler = setInterval( () => {
            gameData.countDown -= 1000;
            if ( gameData.countDown < 0 ) gameData.countDown = 0;
            
            document.getElementById( "countDown" ).innerHTML = `${gameData.sts} : ${parseInt(gameData.countDown/1000)} s`
            
            if ( gameData.countDown === 0 ) clearInterval( countDownHandler );
        }, 1000 );

    })
</script>